datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id           Int      @id @default(autoincrement())
  name         String
  email        String
  passwordHash String
  createdAt    DateTime @default(now())
  admin        Boolean  @default(false)
  helper       Boolean  @default(false)
  student      Boolean  @default(false)
  teacher      Boolean  @default(false)

  followers User[] @relation("UserFollows")
  following User[] @relation("UserFollows")
  blockers  User[] @relation("UserBlocks")
  blocking  User[] @relation("UserBlocks")

  messages Message[]
  votes    MessageVote[]
}

model Category {
  id          Int     @id @default(autoincrement())
  name        String
  description String?
  pinned      Boolean @default(false)
  locked      Boolean @default(false)

  parentId Int?
  parent   Category?  @relation("ParentChildren", fields: [parentId], references: [id])
  children Category[] @relation("ParentChildren")

  posts Post[]
}

model Post {
  messageId Int     @id
  message   Message @relation(fields: [messageId], references: [id])
  title     String
  locked    Boolean @default(false)
  question  Boolean @default(true)

  answerId Int?     @unique
  answer   Message? @relation("QuestionAnswer", fields: [answerId], references: [id])

  categoryId Int
  category   Category @relation(fields: [categoryId], references: [id])
}

model Message {
  id        Int       @id @default(autoincrement())
  content   String
  createdAt DateTime  @default(now())
  editedAt  DateTime?
  pinned    Boolean   @default(false)

  post     Post?
  question Post? @relation("QuestionAnswer")

  parentId Int?
  parent   Message?  @relation("ParentReplies", fields: [parentId], references: [id])
  replies  Message[] @relation("ParentReplies")

  authorId Int
  author   User @relation(fields: [authorId], references: [id])

  votes MessageVote[]
}

model MessageVote {
  messageId Int
  message   Message  @relation(fields: [messageId], references: [id])
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  positive  Boolean
  createdAt DateTime @default(now())

  @@id([messageId, userId])
}
